package strings_test;

public class SubSequence {
	public static void main(String[] args) {
		
		String str1 = "gksrek";
		int m=str1.length();
		String str2 = "geeksforgeeks";
		int n=str2.length();
		boolean res = isSubSequence(str1,str2,m,n);
		
		if(res){
			System.out.println("yes");
		}
		else{
			System.out.println("no");
		}
			
	}
	//Recursive Java program to check if a string
	//is subsequence of another string
	private static boolean isSubSequence(String str1, String str2,int m, int n) {
		// TODO Auto-generated method stub
		if(m==0){
			return true;
		}
		if(n==0){
			return false;
		}
		if(str1.charAt(m-1)==str2.charAt(n-1)){
			return isSubSequence(str1, str2, m-1, n-1);
		}
		
		return isSubSequence(str1, str2, m, n-1);
	}
	// Iterative Java program to check if a string is subsequence of another string
	// Returns true if str1[] is a subsequence of str2[]
	// m is length of str1 and n is length of str2
	 static boolean isSubSequence2(String str1, String str2, int m, int n)
	 {
		        int j = 0;
		        // Traverse str2 and str1, and compare current character 
		        // of str2 with first unmatched char of str1, if matched 
		        // then move ahead in str1
		        for (int i=0; i<n&&j<m; i++)
		            if (str1.charAt(j) == str2.charAt(i))
		                j++;
		 
		        // If all characters of str1 were found in str2
		        return (j==m); 
	 }	 
}